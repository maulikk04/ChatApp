<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <meta http-equiv="X-UA-Compatible" content="ie=edge">
  <title>Chat App</title>
</head>
<style>
  body {
    font-family: Arial, sans-serif;
    margin: 0;
    padding: 0;
    background-color: #f4f4f4;
  }

  .container {
    width: 80%;
    margin: auto;
    overflow: hidden;
  }

  header {
    background: #1abc9c;
    color: white;
    padding: 20px 0;
    text-align: center;
  }

  header a {
    color: #ffffff;
    text-decoration: none;
    text-transform: uppercase;
    font-size: 16px;
    margin: 0 20px;
  }

  header a:hover {
    color: #e8491d;
  }

  main {
    padding: 50px 0;
    text-align: center;
  }

  main h1 {
    font-size: 36px;
    color: #333;
  }

  .button-container {
    margin-top: 20px;
  }

  .button-container a {
    display: inline-block;
    padding: 10px 20px;
    background-color: #1abc9c;
    color: #ffffff;
    text-decoration: none;
    font-size: 18px;
    margin: 0 10px;
    border-radius: 5px;
  }

  .button-container a:hover {
    background-color: #e8491d;
  }

  footer {
    background: #1abc9c;
    color: #ffffff;
    text-align: center;
    padding: 10px 0;
    position: fixed;
    bottom: 0;
    width: 100%;
  }

  #message-container {
    margin-top: 20px;
    padding: 20px;
    background-color: #f9f9f9;
    border-radius: 10px;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    max-height: 400px;
    overflow-y: auto;
    font-family: 'Arial', sans-serif;
    font-size: 16px;
    color: #333;
    display: flex;
    flex-direction: column;
    gap: 10px;
  }

  .message {
    display: inline-block;
    max-width: 70%;
    padding: 10px 15px;
    border-radius: 15px;
  }

  .user-message {
    align-self: flex-end;
    background-color: #1abc9c;
    color: #fff;
  }

  .other-message {
    align-self: flex-start;
    background-color: #e0e0e0;
    color: #333;
  }

  #send-container {
    margin-top: 20px;
    display: flex;
    align-items: center;
  }

  #message-input {
    flex: 1;
    padding: 10px;
    border: 1px solid #ccc;
    border-radius: 5px;
    font-size: 16px;
  }

  #send-button {
    padding: 10px 20px;
    background-color: #1abc9c;
    color: #fff;
    border: none;
    border-radius: 5px;
    cursor: pointer;
    font-size: 16px;
    margin-left: 10px;
  }

  #send-button:hover {
    background-color: #16a085;
  }
</style>

<body>
  <header>
    <div class="container">
      <nav>
        <a href="/">Home</a>
        <% if(user){ %>
          <a href="/auth/logout">Logout</a>
          <% }else{ %>
            <a href="/auth/google">Login</a>
            <% } %>
              <a href="/index">Chat</a>
      </nav>
    </div>
  </header>
  <main>
    <h1>Chat App</h1>
    <div id="message-container"></div>
    <form id="send-container">
      <input type="text" id="message-input" placeholder="Type your message here...">
      <button type="submit" id="send-button">Send</button>
    </form>
  </main>

  <script src="/socket.io/socket.io.js"></script>
  <script>
    const socket = io()
    const sendbtn = document.getElementById('send-container');
    const messageinput = document.getElementById('message-input');
    const messagecontainer = document.getElementById('message-container');


    const name = '<%= user ? user.displayName : "" %>';
    appendMessage(name, 'connected');

    socket.emit('new-user', name);
    socket.on('chat-message', data => {
      appendMessage(data.name, data.message);
    })
    socket.on('user-connected', name => {
      appendMessage(name, 'joined the chat');
    })

    socket.on('user-disconnected', name => {
      appendMessage(name, 'left the chat')
    })
    sendbtn.addEventListener('submit', e => {
      e.preventDefault();
      const message = messageinput.value;
      appendMessage('You', message);
      socket.emit('send-chat-message', message);
      messageinput.value = '';
    })
    function appendMessage(sender, message) {
      const messageelement = document.createElement('div');
      messageelement.classList.add('message');
      messageelement.innerText = `${sender}: ${message}`;
      messageelement.classList.add(sender === 'You' ? 'user-message' : 'other-message');
      messagecontainer.append(messageelement);
    }
  </script>
  </script>
</body>

</html>